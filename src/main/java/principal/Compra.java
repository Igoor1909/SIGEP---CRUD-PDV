/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package principal;

import Conexao.CompraDAO;
import Conexao.EstoqueDAO;
import Conexao.FornecedorDAO;
import Conexao.ItemCompraDAO;
import Conexao.conexao;
import Conexao.produtoDAO;
import dados.CompraDados;
import dados.FornecedorDados;
import dados.ItemCompraDados;
import dados.ProdutoDados;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;

/**
 *
 * @author igorg
 */
public class Compra extends javax.swing.JFrame {

    /**
     * Creates new form Compra
     */
    private final produtoDAO produtoDAO;

    // Construtor padrão usa o DAO real
    public Compra() {
        this(new produtoDAO());
    }

    // Construtor para injetar o DAO (útil para testes)
    public Compra(produtoDAO produtoDAO) {
        this.produtoDAO = produtoDAO;
        initComponents();
        // Outras inicializações, se houver
    }

    private CompraDAO compraDAO = new CompraDAO(new conexao());

    // método getter
    protected CompraDAO getCompraDAO() {
        return compraDAO;
    }

    // método setter para facilitar injeção em testes
    protected void setCompraDAO(CompraDAO compraDAO) {
        this.compraDAO = compraDAO;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtIDFornecedor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblNomeFornecedor = new javax.swing.JLabel();
        lblCnpjFornecedor = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        lblRuaFornecedor = new javax.swing.JLabel();
        lblComplementoFornecedor = new javax.swing.JLabel();
        lblCidadeFornecedor = new javax.swing.JLabel();
        lblEstadoFornecedor = new javax.swing.JLabel();
        lblNumeroFornecedor = new javax.swing.JLabel();
        lblBairroFornecedor = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtIDProduto = new javax.swing.JTextField();
        btnBuscarProduto = new javax.swing.JButton();
        btnAdicionarProduto = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtNomeProduto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtQuantidadeProduto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtValorProduto = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtDescontoProduto = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtValorTotalProduto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProdutosCompra = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblTotalVenda = new javax.swing.JLabel();
        btnLimparProdutos = new javax.swing.JButton();
        btnFinalizarCompra = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setForeground(new java.awt.Color(204, 255, 255));

        txtIDFornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("ID Fornecedor");

        lblNomeFornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        lblCnpjFornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        btnBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblRuaFornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        lblComplementoFornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        lblCidadeFornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        lblEstadoFornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        lblNumeroFornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        lblBairroFornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtIDFornecedor, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblRuaFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblNumeroFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblComplementoFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(lblCnpjFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblEstadoFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(lblNomeFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblCidadeFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBairroFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeFornecedor)
                    .addComponent(jLabel2)
                    .addComponent(lblCidadeFornecedor)
                    .addComponent(lblBairroFornecedor))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCnpjFornecedor)
                    .addComponent(txtIDFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstadoFornecedor))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscar)
                    .addComponent(lblNumeroFornecedor)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblRuaFornecedor)
                        .addComponent(lblComplementoFornecedor)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Realizar Compra");

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("ID Produto");

        txtIDProduto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtIDProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDProdutoActionPerformed(evt);
            }
        });

        btnBuscarProduto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBuscarProduto.setText("Buscar");
        btnBuscarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProdutoActionPerformed(evt);
            }
        });

        btnAdicionarProduto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdicionarProduto.setText("Adicionar");
        btnAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarProdutoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Nome");

        txtNomeProduto.setEditable(false);
        txtNomeProduto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtNomeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeProdutoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Quantidade");

        txtQuantidadeProduto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtQuantidadeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeProdutoActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Valor");

        txtValorProduto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Desconto");

        txtDescontoProduto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Valor total");

        txtValorTotalProduto.setEditable(false);
        txtValorTotalProduto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBuscarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtIDProduto)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNomeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtQuantidadeProduto)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtValorProduto)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDescontoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtValorTotalProduto)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnAdicionarProduto)
                .addGap(26, 26, 26))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIDProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarProduto)
                    .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescontoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorTotalProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarProduto)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        tblProdutosCompra.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tblProdutosCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Produto", "Nome", "Quantidade", "Valor", "Desconto", "Valor total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProdutosCompra.setSelectionForeground(new java.awt.Color(0, 204, 204));
        jScrollPane1.setViewportView(tblProdutosCompra);

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dinheiro", "Pix", "Credito", "Debito", "Boleto", "Fiado" }));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("Forma de pagamento");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("Total da compra");

        lblTotalVenda.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTotalVenda.setText("0,00");

        btnLimparProdutos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLimparProdutos.setText("Limpar produtos");
        btnLimparProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparProdutosActionPerformed(evt);
            }
        });

        btnFinalizarCompra.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnFinalizarCompra.setText("Finalizar");
        btnFinalizarCompra.setMaximumSize(new java.awt.Dimension(142, 27));
        btnFinalizarCompra.setMinimumSize(new java.awt.Dimension(142, 27));
        btnFinalizarCompra.setPreferredSize(new java.awt.Dimension(142, 27));
        btnFinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarCompraActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSair.setText("Sair");
        btnSair.setPreferredSize(new java.awt.Dimension(142, 27));
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("R$:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLimparProdutos)
                            .addComponent(btnFinalizarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(lblTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(393, 393, 393)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(btnLimparProdutos))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTotalVenda)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFinalizarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDProdutoActionPerformed

    private void btnAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarProdutoActionPerformed
        adiconarCarrinho();
    }//GEN-LAST:event_btnAdicionarProdutoActionPerformed

    private void txtNomeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeProdutoActionPerformed

    private void txtQuantidadeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeProdutoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        ExecutarFornecedor(
                txtIDFornecedor, lblNomeFornecedor, lblCnpjFornecedor, lblRuaFornecedor,
                lblComplementoFornecedor, lblNumeroFornecedor, lblCidadeFornecedor,
                lblEstadoFornecedor, lblBairroFornecedor, new FornecedorDAO()
        );    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProdutoActionPerformed
        ExecutarProduto(txtIDProduto, txtNomeProduto, txtValorProduto, txtDescontoProduto, txtIDProduto, txtValorTotalProduto, txtQuantidadeProduto);
    }//GEN-LAST:event_btnBuscarProdutoActionPerformed

    private void btnLimparProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparProdutosActionPerformed
        int confirm = JOptionPane.showConfirmDialog(
                this,
                "Deseja realmente limpar todos os produtos?",
                "Confirmar Limpeza",
                JOptionPane.YES_NO_OPTION
        );

        if (confirm == JOptionPane.YES_OPTION) {
            limparTabelaProdutos();
        }
    }//GEN-LAST:event_btnLimparProdutosActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnFinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarCompraActionPerformed
        finalizarCompra();
    }//GEN-LAST:event_btnFinalizarCompraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Compra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Compra telaCompra = new Compra();
                telaCompra.limparTabelaProdutos(); // Opcional: pode chamar aqui também
                telaCompra.setVisible(true);
            }
        });
    }

    public void limparCampos() {
        txtIDProduto.setText("");
        txtNomeProduto.setText("");
        txtQuantidadeProduto.setText("");
        txtValorProduto.setText("");
        txtDescontoProduto.setText("");
        txtValorTotalProduto.setText("");
        txtIDProduto.requestFocus();
    }

    public void ExecutarFornecedor(JTextField txtIdFornecedor, JLabel lblNomeFornecedor,
            JLabel lblCnpjFornecedor, JLabel lblRuaFornecedor, JLabel lblComplementoFornecedor,
            JLabel lblNumeroFornecedor, JLabel lblCidadeFornecedor, JLabel lblEstadoFornecedor,
            JLabel lblBairroFornecedor, FornecedorDAO fornecedorDAO) {

        String idText = txtIdFornecedor.getText();

        if (idText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, preencha o campo ID");
            return;
        }

        int id;
        try {
            id = Integer.parseInt(idText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, insira um valor numérico para o ID");
            return;
        }

        FornecedorDados a = fornecedorDAO.getFornecedorDados(id);

        if (a != null) {
            lblNomeFornecedor.setText(a.getNome_fornecedor());
            lblCnpjFornecedor.setText(a.getCnpj_fornecedor());
            lblRuaFornecedor.setText(a.getRua_fornecedor());
            lblComplementoFornecedor.setText(a.getComplemento_fornecedor());
            lblNumeroFornecedor.setText(String.valueOf(a.getNumero_fornecedor()));
            lblCidadeFornecedor.setText(a.getCidade_fornecedor());
            lblEstadoFornecedor.setText(a.getEstado_fornecedor());
            lblBairroFornecedor.setText(a.getBairro_fornecedor());
        } else {
            JOptionPane.showMessageDialog(null, "Registro não encontrado.");
            lblNomeFornecedor.setText("");
            lblCnpjFornecedor.setText("");
            lblRuaFornecedor.setText("");
            lblComplementoFornecedor.setText("");
            lblNumeroFornecedor.setText("");
            lblCidadeFornecedor.setText("");
            lblEstadoFornecedor.setText("");
            lblBairroFornecedor.setText("");
        }
    }

    public void ExecutarProduto(JTextField txtIDProduto, JTextField txtNomeProduto,
            JTextField txtValorProduto, JTextField txtDescontoProduto,
            JTextField txtEanProduto, JTextField txtValorTotalProduto,
            JTextField txtQuantidadeProduto) {

        txtQuantidadeProduto.setText("1");
        txtDescontoProduto.setText("0,00");

        addValidacaoCampos(txtValorProduto, txtQuantidadeProduto, txtDescontoProduto, txtValorTotalProduto);

        String idText = txtIDProduto.getText();

        if (idText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, preencha o campo ID");
            return;
        }

        int id;
        try {
            id = Integer.parseInt(idText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, insira um valor numérico para o ID");
            return;
        }

        ProdutoDados a = produtoDAO.getProdutoDados(id);  // Usa o campo, não cria DAO novo

        if (a != null) {
            txtNomeProduto.setText(a.getNome_produto());
            txtValorProduto.setText(formatarDecimal(a.getValor()));
            calcularValorTotal(txtValorProduto, txtQuantidadeProduto, txtDescontoProduto, txtValorTotalProduto);
        } else {
            JOptionPane.showMessageDialog(null, "Registro não encontrado.");
            txtNomeProduto.setText("");
            txtValorProduto.setText("");
            txtQuantidadeProduto.setText("");
            txtDescontoProduto.setText("");
            txtValorTotalProduto.setText("");
        }
    }

    public void addValidacaoCampos(JTextField txtValor, JTextField txtQuantidade,
            JTextField txtDesconto, JTextField txtTotal) {
        txtValor.addActionListener(e -> {
            validarCampoDecimal(txtValor, "valor");
            calcularValorTotal(txtValor, txtQuantidade, txtDesconto, txtTotal);
        });

        txtQuantidade.addActionListener(e -> {
            validarCampoQuantidade(txtQuantidade);
            calcularValorTotal(txtValor, txtQuantidade, txtDesconto, txtTotal);
        });

        txtDesconto.addActionListener(e -> {
            validarCampoDecimal(txtDesconto, "desconto");
            verificarDescontoMaiorQueTotal(txtValor, txtQuantidade, txtDesconto, txtTotal);
            calcularValorTotal(txtValor, txtQuantidade, txtDesconto, txtTotal);
        });
    }

    public void validarCampoDecimal(JTextField campo, String nomeCampo) {
        String texto = campo.getText();

        if (texto.contains(".")) {
            JOptionPane.showMessageDialog(null, "Use vírgula (,) como separador decimal no " + nomeCampo + ", não ponto (.)");
            return;
        }

        if (!texto.matches("^\\d+([,]\\d{1,2})?$")) {
            JOptionPane.showMessageDialog(null, nomeCampo.substring(0, 1).toUpperCase() + nomeCampo.substring(1)
                    + " inválido! Use apenas números e vírgula como separador decimal (ex: 12,99)");
        }
    }

    public void validarCampoQuantidade(JTextField campo) {
        String texto = campo.getText();

        if (!texto.matches("^\\d+$")) {
            JOptionPane.showMessageDialog(null, "Quantidade inválida! Use apenas números inteiros (ex: 1, 2, 3)");
        } else if (texto.equals("0")) {
            JOptionPane.showMessageDialog(null, "Quantidade não pode ser zero!");
        }
    }

    public void verificarDescontoMaiorQueTotal(JTextField txtValor, JTextField txtQuantidade,
            JTextField txtDesconto, JTextField txtTotal) {
        try {
            double valor = parseDecimal(txtValor.getText());
            int quantidade = Integer.parseInt(txtQuantidade.getText());
            double desconto = parseDecimal(txtDesconto.getText());

            double valorTotal = valor * quantidade;

            if (desconto > valorTotal) {
                JOptionPane.showMessageDialog(null, "Desconto não pode ser maior que o valor total dos produtos!");
            }
        } catch (NumberFormatException e) {
        }
    }

    public void calcularValorTotal(JTextField txtValor, JTextField txtQuantidade,
            JTextField txtDesconto, JTextField txtTotal) {
        try {
            double valor = parseDecimal(txtValor.getText());
            int quantidade = Integer.parseInt(txtQuantidade.getText());
            double desconto = parseDecimal(txtDesconto.getText());

            double valorTotal = (valor * quantidade) - desconto;
            if (valorTotal < 0) {
                valorTotal = 0;
            }

            txtTotal.setText(formatarDecimal(valorTotal));
        } catch (NumberFormatException e) {
            txtTotal.setText("Erro no cálculo");
        }
    }

    public void adiconarCarrinho() {
        try {
            String idProduto = txtIDProduto.getText().trim();
            String nomeProduto = txtNomeProduto.getText().trim();
            String quantidadeStr = txtQuantidadeProduto.getText().trim();
            String valorStr = txtValorProduto.getText().trim().replace(",", ".");
            String descontoStr = txtDescontoProduto.getText().trim().replace(",", ".");

            if (idProduto.isEmpty() || nomeProduto.isEmpty() || quantidadeStr.isEmpty()
                    || valorStr.isEmpty() || descontoStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Preencha todos os campos!", "Aviso", JOptionPane.WARNING_MESSAGE);
                return;
            }

            int quantidade = Integer.parseInt(quantidadeStr);
            double valor = Double.parseDouble(valorStr);
            double desconto = Double.parseDouble(descontoStr);

            DefaultTableModel model = (DefaultTableModel) tblProdutosCompra.getModel();

            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(i, 0) != null && model.getValueAt(i, 0).toString().equals(idProduto)) {
                    JOptionPane.showMessageDialog(this, "ID já existe!", "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            NumberFormat nf = NumberFormat.getNumberInstance(new Locale("pt", "BR"));
            nf.setMinimumFractionDigits(2);

            model.insertRow(0, new Object[]{
                idProduto,
                nomeProduto,
                quantidade,
                nf.format(valor),
                nf.format(desconto),
                nf.format((valor * quantidade) - desconto)
            });

            atualizarTotalGeral();
            limparCampos();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Valores inválidos!\nUse:\n- Inteiros para quantidade\n- Decimais para valores",
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public String formatarDecimal(double valor) {
        return String.format("%.2f", valor).replace(".", ",");
    }

    public double parseDecimal(String texto) throws NumberFormatException {
        return Double.parseDouble(texto.replace(",", "."));
    }

    public void atualizarTotalGeral() {
        DefaultTableModel model = (DefaultTableModel) tblProdutosCompra.getModel();
        double total = 0.0;

        for (int i = 0; i < model.getRowCount(); i++) {
            Object valorCell = model.getValueAt(i, 5); // Coluna do Valor Total

            if (valorCell != null) {
                try {
                    String valorTotalStr = valorCell.toString()
                            .replace("R$", "")
                            .replace(".", "")
                            .replace(",", ".");
                    total += Double.parseDouble(valorTotalStr);
                } catch (NumberFormatException e) {
                    System.err.println("Valor inválido na linha " + i + ": " + valorCell);
                }
            }
        }

        // Formata sem o símbolo R$
        NumberFormat nf = NumberFormat.getNumberInstance(new Locale("pt", "BR"));
        nf.setMinimumFractionDigits(2);
        nf.setMaximumFractionDigits(2);
        lblTotalVenda.setText(nf.format(total));
    }

    public void limparTabelaProdutos() {
        // Salva os nomes das colunas atuais
        String[] columnNames = new String[tblProdutosCompra.getColumnCount()];
        for (int i = 0; i < tblProdutosCompra.getColumnCount(); i++) {
            columnNames[i] = tblProdutosCompra.getColumnName(i);
        }

        // Cria um novo modelo com as mesmas colunas
        DefaultTableModel newModel = new DefaultTableModel(columnNames, 44);
        tblProdutosCompra.setModel(newModel);

        atualizarTotalGeral();
        tblProdutosCompra.clearSelection();
    }

    public void finalizarCompra() {
        try {
            String idFornecedorStr = txtIDFornecedor.getText().trim();
            String formaPagamento = (String) jComboBox1.getSelectedItem();
            String totalVendaStr = lblTotalVenda.getText().trim();

            if (idFornecedorStr.isEmpty()) {
                JOptionPane.showMessageDialog(null, "O campo ID do fornecedor não pode estar vazio.");
                return;
            }

            if (formaPagamento == null || formaPagamento.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Selecione uma forma de pagamento.");
                return;
            }

            if (totalVendaStr.isEmpty() || totalVendaStr.equals("0") || totalVendaStr.equals("0,00")) {
                JOptionPane.showMessageDialog(null, "O total da compra não pode estar vazio ou zero.");
                return;
            }

            int idFornecedor;
            try {
                idFornecedor = Integer.parseInt(idFornecedorStr);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "ID do fornecedor deve ser um número válido.");
                return;
            }

            CompraDados dadosCompra = new CompraDados();
            dadosCompra.setId_fornecedor(idFornecedor);
            dadosCompra.setPagamento_compra(formaPagamento);
            dadosCompra.setTotal_venda(totalVendaStr);

            // Troque esta linha:
            // CompraDAO compraDAO = new CompraDAO(new conexao());
            // int idCompraGerado = compraDAO.cadastrarCompra(dadosCompra);
            // Por esta:
            int idCompraGerado = getCompraDAO().cadastrarCompra(dadosCompra);

            if (idCompraGerado != -1) {
                salvarItensCompra(idCompraGerado);
                JOptionPane.showMessageDialog(null, "Compra cadastrada com sucesso!");
                limparCamposCompra();
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar a compra.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao finalizar compra: " + e.getMessage());
        }
    }

    public void salvarItensCompra(int idCompraGerado) {
        DefaultTableModel model = (DefaultTableModel) tblProdutosCompra.getModel();
        ItemCompraDAO itemDAO = new ItemCompraDAO();

        for (int i = 0; i < model.getRowCount(); i++) {
            try {
                // Obtém os valores da linha
                Object idProdutoObj = model.getValueAt(i, 0);
                Object quantidadeObj = model.getValueAt(i, 2);
                Object valorTotalObj = model.getValueAt(i, 5);
                Object descontoObj = model.getValueAt(i, 4);

                // Pula linha se ID do produto estiver vazio ou nulo
                if (idProdutoObj == null || idProdutoObj.toString().trim().isEmpty()) {
                    continue;
                }

                // Converte os valores
                int idProduto = Integer.parseInt(idProdutoObj.toString());
                int quantidade = (quantidadeObj != null && !quantidadeObj.toString().isEmpty())
                        ? Integer.parseInt(quantidadeObj.toString()) : 0;

                double valorTotal = (valorTotalObj != null && !valorTotalObj.toString().isEmpty())
                        ? Double.parseDouble(valorTotalObj.toString().replace(",", ".")) : 0.0;

                double desconto = (descontoObj != null && !descontoObj.toString().isEmpty())
                        ? Double.parseDouble(descontoObj.toString().replace(",", ".")) : 0.0;

                // Preenche objeto com os dados da linha
                ItemCompraDados item = new ItemCompraDados();
                item.setId_compra(idCompraGerado);
                item.setId_produto(idProduto);
                item.setQuantidade_produto(quantidade);
                item.setTotal_produto(valorTotal);
                item.setDesconto_produto(desconto);

                // Tenta cadastrar item no banco
                boolean sucesso = itemDAO.cadastrarItem(item);
                if (!sucesso) {
                    JOptionPane.showMessageDialog(null, "Erro ao salvar item da linha " + (i + 1));
                    break;
                }

            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Erro de conversão na linha " + (i + 1) + ": " + nfe.getMessage());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro inesperado na linha " + (i + 1) + ": " + e.getMessage());
            }
        }
    }

    public void limparCamposCompra() {
        txtIDFornecedor.setText("");
        lblTotalVenda.setText("0,00");
        jComboBox1.setSelectedIndex(0);
        limparTabelaProdutos();
        lblNomeFornecedor.setText("");
        lblRuaFornecedor.setText("");
        lblNumeroFornecedor.setText("");
        lblEstadoFornecedor.setText("");
        lblBairroFornecedor.setText("");
        lblCidadeFornecedor.setText("");
        lblComplementoFornecedor.setText("");
        lblCnpjFornecedor.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarProduto;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarProduto;
    private javax.swing.JButton btnFinalizarCompra;
    private javax.swing.JButton btnLimparProdutos;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBairroFornecedor;
    private javax.swing.JLabel lblCidadeFornecedor;
    private javax.swing.JLabel lblCnpjFornecedor;
    private javax.swing.JLabel lblComplementoFornecedor;
    private javax.swing.JLabel lblEstadoFornecedor;
    private javax.swing.JLabel lblNomeFornecedor;
    private javax.swing.JLabel lblNumeroFornecedor;
    private javax.swing.JLabel lblRuaFornecedor;
    private javax.swing.JLabel lblTotalVenda;
    private javax.swing.JTable tblProdutosCompra;
    private javax.swing.JTextField txtDescontoProduto;
    private javax.swing.JTextField txtIDFornecedor;
    private javax.swing.JTextField txtIDProduto;
    private javax.swing.JTextField txtNomeProduto;
    private javax.swing.JTextField txtQuantidadeProduto;
    private javax.swing.JTextField txtValorProduto;
    private javax.swing.JTextField txtValorTotalProduto;
    // End of variables declaration//GEN-END:variables
}
